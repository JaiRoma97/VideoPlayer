{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/bookmarks/bookmarks.component.css","webpack:///./src/app/bookmarks/bookmarks.component.html","webpack:///./src/app/bookmarks/bookmarks.component.ts","webpack:///./src/app/history/history.component.css","webpack:///./src/app/history/history.component.html","webpack:///./src/app/history/history.component.ts","webpack:///./src/app/search-bar/search-bar.component.css","webpack:///./src/app/search-bar/search-bar.component.html","webpack:///./src/app/search-bar/search-bar.component.ts","webpack:///./src/app/video-item.ts","webpack:///./src/app/video-view/video-view.component.css","webpack:///./src/app/video-view/video-view.component.html","webpack:///./src/app/video-view/video-view.component.ts","webpack:///./src/app/video.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<app-search-bar></app-search-bar>\\n<app-video-view></app-video-view>\\n<app-history></app-history>\\n<app-bookmarks></app-bookmarks>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent  {\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { YoutubePlayerModule } from 'ngx-youtube-player';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { VideoViewComponent } from './video-view/video-view.component';\nimport { HistoryComponent } from './history/history.component';\nimport { BookmarksComponent } from './bookmarks/bookmarks.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports:      [ BrowserModule, FormsModule, YoutubePlayerModule, HttpClientModule ],\n  declarations: [ AppComponent, SearchBarComponent, VideoViewComponent, HistoryComponent, BookmarksComponent ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n","module.exports = \".book{\\r\\n  position: absolute;\\r\\n  width:80%;\\r\\n  top: 65px;\\r\\n  left: 400px;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va21hcmtzL2Jvb2ttYXJrcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxTQUFTO0VBQ1QsV0FBVztFQUNYIiwiZmlsZSI6InNyYy9hcHAvYm9va21hcmtzL2Jvb2ttYXJrcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvb2t7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOjgwJTtcclxuICB0b3A6IDY1cHg7XHJcbiAgbGVmdDogNDAwcHg7XHJcbiAgfVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"book\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <br>\\n        <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"clickBookmarks()\\\">See bookmarks</button>\\n        <ul class=\\\"list-group\\\" *ngIf=\\\"showBookmarks\\\">\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let video of bookmarks\\\"\\n          (click)=\\\"onSelect(video)\\\">{{video.url}}\\n          </li>\\n        </ul>\\n\\n        <div *ngIf=\\\"selectedVideo\\\">\\n          <!-- HERE GOES THE VIDEO EXECUTION -->\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { VideoItem } from '../video-item';\nimport { VideoService } from '../video.service';\n\n@Component({\n  selector: 'app-bookmarks',\n  templateUrl: './bookmarks.component.html',\n  styleUrls: ['./bookmarks.component.css']\n})\n\nexport class BookmarksComponent implements OnInit {\n\n  //The array of videos in the bookmarks\n  bookmarks: VideoItem[];\n  //The current selected video\n  selectedVideo: VideoItem;\n  //Displays the list of bookmarks\n  showBookmarks = false;\n\n  //Controls the selection of a video in the bookmarks\n  onSelect(video: VideoItem): void{\n    this.selectedVideo = video;\n  }\n\n  //Gets the bookmark list from the service\n  getBookmarks(): void{\n    this.videoService.getVideos('/readBookmarks').subscribe(videos => this.bookmarks = videos);\n  }\n\n  //Controls the bookmarks list status\n  clickBookmarks(){\n    this.showBookmarks = ! this.showBookmarks;\n  }\n\n  /* TODO ()Solve problem with CORS)\n  deleteBookmarks(videoId: number): void {\n    this.videoService.deleteVideo(videoId, '/deleteBookmark').subscribe(_ => {\n      this.bookmarks = this.bookmarks.filter(video => video.id !== videoId);\n    });\n  }\n  */\n\n  constructor(private videoService: VideoService) { }\n\n  //On init, we get the bookmark list\n  ngOnInit() {\n    this.getBookmarks();\n  }\n\n}\n","module.exports = \".hist{\\r\\n  position: absolute;\\r\\n  width:80%;\\r\\n  top: 25px;\\r\\n  left: 50px;\\r\\n  color: #DB7093;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGlzdG9yeS9oaXN0b3J5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsU0FBUztFQUNULFNBQVM7RUFDVCxVQUFVO0VBQ1YsY0FBYztFQUNkIiwiZmlsZSI6InNyYy9hcHAvaGlzdG9yeS9oaXN0b3J5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGlzdHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgd2lkdGg6ODAlO1xyXG4gIHRvcDogMjVweDtcclxuICBsZWZ0OiA1MHB4O1xyXG4gIGNvbG9yOiAjREI3MDkzO1xyXG4gIH1cclxuIl19 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"hist\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <h2>LOCAL HISTORY</h2>\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let video of history\\\"\\n          (click)=\\\"onSelect(video)\\\">{{video.url}}\\n          </li>\\n        </ul>\\n\\n        <div *ngIf=\\\"selectedVideo\\\">\\n          <!-- HERE GOES THE VIDEO EXECUTION -->\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { VideoItem } from '../video-item';\nimport { VideoService } from '../video.service';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\n\nexport class HistoryComponent implements OnInit {\n\n  //The array of videos in the history\n  history: VideoItem[];\n  //The current selected video\n  selectedVideo: VideoItem;\n\n  //Controls the selection of a video in the history\n  onSelect(video: VideoItem): void{\n    this.selectedVideo = video;\n  }\n\n  //Gets the history list from the service\n  getHistory(): void{\n    this.videoService.getVideos('/readHistory').subscribe(videos => this.history = videos);\n  }\n\n  /* TODO ()Solve problem with CORS)\n  deleteHistory(videoId: number): void {\n    this.videoService.deleteVideo(videoId, '/deleteHistory').subscribe(_ => {\n      this.history = this.history.filter(video => video.id !== videoId);\n    });\n}\n*/\n\n\n  constructor(private videoService: VideoService) { }\n\n//On init, we get the history list\n  ngOnInit() {\n    this.getHistory();\n  }\n\n}\n","module.exports = \".bar{\\r\\n  position: absolute;\\r\\n  width: 1200px;\\r\\n  top: 150px;\\r\\n  right: 200px;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoLWJhci9zZWFyY2gtYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLFVBQVU7RUFDVixZQUFZO0VBQ1oiLCJmaWxlIjoic3JjL2FwcC9zZWFyY2gtYmFyL3NlYXJjaC1iYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iYXJ7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMjAwcHg7XHJcbiAgdG9wOiAxNTBweDtcclxuICByaWdodDogMjAwcHg7XHJcbiAgfVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"bar\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type= \\\"string\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"url\\\"\\n            #url>\\n          <br>\\n          <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\" aria-label=\\\"Button Controller\\\">\\n              <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"First\\\">\\n                <button type =\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"uploadVideo(url.value, '/insertHistory')\\\">See video</button>\\n              </div>\\n              <div class=\\\"btn-group mr-2\\\" role=\\\"group\\\" aria-label=\\\"Second\\\">\\n                <button type =\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"uploadVideo(url.value, '/insertBookmark')\\\">Add to bookmarks</button>\\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { VideoItem } from '../video-item';\nimport { VideoService } from '../video.service';\n\n@Component({\n  selector: 'app-search-bar',\n  templateUrl: './search-bar.component.html',\n  styleUrls: ['./search-bar.component.css']\n})\n\nexport class SearchBarComponent implements OnInit {\n\n  newVideo: VideoItem = new VideoItem();\n  onPlay: string;\n\n/* TODO - A way to change the youtube video id\n  newSVideo(newSVideo: string){\n    this.onPlay = youtube_parser(this.onPlay)\n    this.videoService.changeSVIDEO(newSVideo);\n  }\n\n  //A function to get the id from all the type of youtube urls\n  youtube_parser(url: string){\n\tvar regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*;\n\tvar match = url.match(regExp);\n\tif (match&&match[7].length==11){\n\t    b=match[7];\n\t    alert(b);\n\t}else{\n\t    alert(\"Url is not correct\");\n\t}\n}\n*/\n\n  constructor(private videoService: VideoService) { }\n\n  ngOnInit() {\n    this.videoService.currentMessage.subscribe(sVideo => this.onPlay = sVideo);\n  }\n\n  uploadVideo(url: string, list: string): void {\n    url = url.trim();\n    if(!url){\n      alert('The URL must not be blank');\n      return;\n    }\n\n    this.newVideo.url = url;\n    this.onPlay = url;\n\n    this.videoService.addVideo(this.newVideo, list).subscribe();\n\n  }\n\n}\n","export class VideoItem {\r\n    url: string;\r\n    id: number;\r\n}\r\n","module.exports = \".vView{\\r\\nposition: absolute;\\r\\nbottom: 100px;\\r\\nright: 200px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlkZW8tdmlldy92aWRlby12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxrQkFBa0I7QUFDbEIsYUFBYTtBQUNiLFlBQVk7QUFDWiIsImZpbGUiOiJzcmMvYXBwL3ZpZGVvLXZpZXcvdmlkZW8tdmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZWaWV3e1xyXG5wb3NpdGlvbjogYWJzb2x1dGU7XHJcbmJvdHRvbTogMTAwcHg7XHJcbnJpZ2h0OiAyMDBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"vView\\\">\\n    <div class=\\\"panel-body\\\">\\n      <youtube-player\\n        [videoId]=\\\"id\\\"\\n        (ready)=\\\"savePlayer($event)\\\"\\n        (change)=\\\"onStateChange($event)\\\"\\n        [playerVars]=\\\"playerVars\\\"\\n      >\\n      </youtube-player>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport{ VideoService } from '../video.service'\n\n@Component({\n  selector: 'app-video-view',\n  templateUrl: './video-view.component.html',\n  styleUrls: ['./video-view.component.css']\n})\nexport class VideoViewComponent implements OnInit {\n\n  id = \"\";\n  playerVars = {\n    cc_lang_pref: 'en'\n  };\n  private player;\n  private ytEvent;\n\n  constructor(private videoService: VideoService) {\n\n  }\n\n  onStateChange(event) {\n    this.ytEvent = event.data;\n  }\n  savePlayer(player) {\n    this.player = player;\n  }\n\n  playVideo() {\n    this.player.playVideo();\n  }\n\n  pauseVideo() {\n    this.player.pauseVideo();\n  }\n\n  ngOnInit() {\n    this.videoService.currentMessage.subscribe(onPlay => this.id = onPlay);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { VideoItem } from './video-item';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Observable, BehaviorSubject, of} from 'rxjs';\n\n//We need to define the header to avoid the CORS protocol\nconst httpOptions = {\nheaders: new HttpHeaders({\n  'Access-Control-Allow-Headers': 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers',\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin' : '*',\n  'Access-Control-Allow-Methods': 'GET,HEAD,OPTIONS,POST,PUT'}\n  )\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class VideoService {\n\n  //The url of the backend\n  private urlDB = 'http://localhost/master/backend/api';\n  videos: VideoItem[];\n\n  //Variables to share the localURL\n  private messageSource = new BehaviorSubject<string>(\"8GW6sLrK40k\");\n  currentMessage = this.messageSource.asObservable();\n\n  changeSVideo(newVideo: string) {\n    this.messageSource.next(newVideo);\n  }\n\n  constructor(private http: HttpClient) { }\n\n  //Get the list off videos from the database. The list attribute will define from wich database the videos are retrieved\n  getVideos(list: string): Observable<VideoItem[]> {\n    return this.http.get<VideoItem[]>(this.urlDB + list)\n    .pipe(\n      map((res)=> {\n        this.videos = res['data'];\n        return this.videos;\n      }),\n      catchError(this.handleError<VideoItem[]>('getVideos', []))\n    );\n}\n\n  //This will add a video to the database. The list attribute will define in wich database the videos will be uploaded\n  addVideo (video: VideoItem, list: string): Observable<VideoItem> {\n    return this.http.post<VideoItem>(this.urlDB+list, video).pipe(\n      catchError(this.handleError<VideoItem>('addVideo'))\n    );\n  }\n\n/* TODO (Solve Problem with CORS)\n  deleteVideo (id: number, list: string): Observable<Video> {\n    const path = `${this.urlDB}${list}/${id}`;\n    const params = new HttpParams()\n    .set('id', id.toString());\n\n    return this.http.delete<Video>(path, { params: params }).pipe(\n      catchError(this.handleError<Video>('deleteVideo'))\n    );\n  }\n*/\n\n\n  //Handle Http operation that failed.\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // Sends the error to remote logging infrastructure\n      console.error(error);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}